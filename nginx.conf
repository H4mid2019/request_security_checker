# This is sample use case of the go_security_app with nginx.
# The go_security_app is running on port 5000 and nginx is running on port 443.

upstream go_security_app {
    # the ip and port which the go_security_app is running on
    server 127.0.0.1:5000 fail_timeout=0;
}

upstream main{
    server 127.0.0.1:8000 fail_timeout=0;
}

server {
    listen [::]:443 ssl ipv6only=on http2;
    listen 443 ssl http2;
    server_name example.com;


    location = /_auth_check {
        internal; 
        proxy_pass http://go_security_app; 
        proxy_pass_request_body off; 
        proxy_set_header Content-Length "";
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Real-IP $remote_addr; 
        proxy_set_header X-Original-URI $request_uri;
        proxy_set_header X-Original-Method $request_method;
        
    }

    location / {
        auth_request /_auth_check;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;
        proxy_buffering off;
        proxy_pass http://main/;
        http2_push_preload on;
    }

    ssl_certificate /etc/ssl/certs/cert.pem;
    ssl_certificate_key /etc/ssl/private/key.pem;
    include /etc/nginx/options-ssl-nginx.conf;
}
